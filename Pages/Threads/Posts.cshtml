@page
@using Microsoft.AspNetCore.Identity
@using Utterly.Areas.Identity.Data

@inject UserManager<UtterlyUser> UserManager
@model Utterly.Pages.Threads.PostsModel
@{
}

<h2>@Model.UtterlyThread.Title</h2>

@foreach (var post in Model.Posts)
{
    var isSoftDeleted = post.Content == "Inlägget har tagits bort";
    var isOwner = post.UserId == UserManager.GetUserId(User);

    <div class="card mb-2">
        <div class="card-header d-flex flex-column flex-sm-row justify-content-between">
            <div class="d-flex align-items-center mb-2 mb-sm-0">
                <img src="@(post.User?.ProfilePicture != null
                                 ? $"data:image/png;base64,{Convert.ToBase64String(post.User.ProfilePicture)}"
                                 : $"https://dummyimage.com/sqrpop/5af2b9/&text={post.User?.UserName ?? "?"}")"
                     alt="Profilbild" width="40" height="40" class="rounded-circle me-2"/>
                <span class="fw-bold me-3">@(post.User?.UserName ?? "[borttagen användare]")</span>
            </div>
            <div class="align-items-center">
                <span class="card-subtitle text-muted m-sm-1 small">@post.CreatedAt</span>
                <span class="badge rounded-pill bg-primary float-end">#@post.Id</span>
            </div>
        </div>
        <div class="container-fluid mb-2">
            <div class="row">
                <div class="col d-flex flex-column">
                    <div class="card-body pb-0">
                        @if (post.ParentPostId.HasValue)
                        {
                            <small class="card-subtitle mb-2 text-muted">Svar till <a href="#@post.ParentPostId">#@post.ParentPostId</a> </small>
                        }
                        @if (isSoftDeleted)
                        {
                            <p class="card-text text-muted fst-italic">@post.Content</p>
                        }
                        else
                        {
                            <p class="card-text">@post.Content</p>
                        }
                    </div>
                    <div class="d-flex justify-content-between">
                        @* Svara-knapp visas bara om inlägget inte är soft-deletat *@
                        @if (!isSoftDeleted)
                        {
                            <a asp-page="/Threads/Posts" asp-route-threadId="@Model.UtterlyThread.Id" asp-route-replyId="@post.Id" class="card-link">Svara</a>
                        }
                        @* Ta bort-knapp visas bara om inlägget inte är soft-deletat och användaren är ägare *@
                        @if (!isSoftDeleted && isOwner && post.UserId != null)
                        {
                            <form method="post" asp-page-handler="DeleteOrSoftDelete" class="d-inline">
                                <input type="hidden" name="postId" value="@post.Id" />
                                <input type="hidden" name="threadId" value="@Model.UtterlyThread.Id" />
                                <button type="submit" class="btn btn-danger btn-sm">Ta bort</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<hr />
<div class="container-md alert alert-warning">
    @if (await UserManager.GetUserAsync(User) != null)
    {
        @* Visa validerings- och API-fel *@
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <div>@error.ErrorMessage</div>
                }
            </div>
        }

        <form method="post" >
            <div>
                <div class="mb-3">
                    <textarea asp-for="NewPost.Content" class="form-control" id="postForm" rows="3"></textarea>
                    <span asp-validation-for="NewPost.Content" class="text-danger"></span>
                </div>
                <input type="hidden" asp-for="NewPost.UserId" value="@UserManager.GetUserId(User)" />
                <input type="hidden" asp-for="NewPost.ThreadId" value="@Model.UtterlyThread.Id" />
                @if (Model.NewPost != null && Model.NewPost.ParentPostId != null)
                {
                    <input type="hidden" asp-for="NewPost.ParentPostId" value="@Model.NewPost.ParentPostId" />
                    <p class="m-0">Svarar på #@Model.NewPost.ParentPostId</p>
                    <a href="@Url.Page($"/Threads/Posts", new { threadId = Model.UtterlyThread.Id})" class="btn btn-secondary btn-danger">Avbryt svar</a>
                }
                <button type="submit" class="btn btn-primary">Posta</button>
            </div>
        </form>
    }
    else
    {
        <p class="m-0">Du måste vara inloggad för att kunna göra inlägg och svara.</p>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}