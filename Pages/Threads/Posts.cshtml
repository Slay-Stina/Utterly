@page
@using Microsoft.AspNetCore.Identity
@using Utterly.Areas.Identity.Data

@inject UserManager<UtterlyUser> UserManager
@model Utterly.Pages.Threads.PostsModel
@{
}

<h2>@Model.UtterlyThread.Title</h2>

@foreach (var post in Model.Posts)
{
    <div class="card mb-2">
        <div class="card-header">
            <span class="badge rounded-pill bg-primary float-end">#@post.Id</span>
            <h6 class="card-subtitle text-muted">@post.CreatedAt</h6>
        </div>
        <div class="container-fluid mb-2">
            <div class="row">
                <div class="col col-sm-1 text-center border-end">
                    <p class="fw-bold text-break">@post.User.UserName</p>
                    <img src="@(post.User.ProfilePicture != null
                                             ? $"data:image/png;base64,{Convert.ToBase64String(post.User.ProfilePicture)}"
                                             : $"https://dummyimage.com/sqrpop/5af2b9/&text={post.User.UserName}")"
                     alt="Profilbild" width="75px" height="75px"/> 
                </div>
                <div class="col d-flex flex-column">
                    <div class="card-body pb-0">
                        @if (post.ParentPostId.HasValue)
                        {
                            <small class="card-subtitle mb-2 text-muted">Svar till <a href="#@post.ParentPostId">#@post.ParentPostId</a> </small>
                        }
                            <p class="card-text">@post.Content</p>
                    </div>
                    <a asp-page="/Threads/Posts" asp-route-threadId="@Model.UtterlyThread.Id" asp-route-replyId="@post.Id" class="card-link float-sm-start">Svara</a>
                </div>
            </div>
        </div>
    </div>
}
<hr />
<div class="container-md alert alert-warning">
    @if (await UserManager.GetUserAsync(User) != null)
    {
        <form method="post">
            <div>
                <div class="mb-3">
                    <textarea asp-for="NewPost.Content" class="form-control" id="postForm" rows="3"></textarea>
                    <span asp-validation-for="NewPost.Content" class="text-danger"></span>
                </div>
                <input type="hidden" asp-for="NewPost.UserId" value="@UserManager.GetUserId(User)" />
                <input type="hidden" asp-for="NewPost.ThreadId" value="@Model.UtterlyThread.Id" />
                @if (Model.NewPost != null && Model.NewPost.ParentPostId != null)
                {
                    <input type="hidden" asp-for="NewPost.ParentPostId" value="@Model.NewPost.ParentPostId" />
                    <p class="m-0">Svarar på #@Model.NewPost.ParentPostId</p>
                    <a href="@Url.Page($"/Threads/Posts", new { threadId = Model.UtterlyThread.Id})" class="btn btn-secondary btn-danger">Avbryt svar</a>
                }
                <button type="submit" class="btn btn-primary">Posta</button>
            </div>
        </form>
    }
    else
    {
        <p class="m-0">Du måste vara inloggad för att kunna göra inlägg och svara.</p>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}